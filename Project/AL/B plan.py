from transformers import AutoTokenizer, T5ForConditionalGeneration

AAQG_PROMPT = "Сгенерируй вопрос по тексту, используя известный ответ. Текст: '{context}'. Ответ: '{answer}'."
QG_PROMPT = "Сгенерируй вопрос по тексту. Текст: '{context}'."
QA_PROMPT = "Сгенерируй ответ на вопрос по тексту. Текст: '{context}'. Вопрос: '{question}'."

saved_checkpoint = 'hivaze/AAQG-QA-QG-FRED-T5-1.7B'
tokenizer = AutoTokenizer.from_pretrained(saved_checkpoint)
model = T5ForConditionalGeneration.from_pretrained(saved_checkpoint).cpu()

def generate_text(prompt, tokenizer, model, n=1, temperature=0.8, num_beams=3):
  encoded_input = tokenizer.encode_plus(prompt, return_tensors='pt')
  encoded_input = {k: v.to(model.device) for k, v in encoded_input.items()}

  resulted_tokens = model.generate(**encoded_input,
                                   max_new_tokens=64,
                                   do_sample=True,
                                   num_beams=num_beams,
                                   num_return_sequences=n,
                                   temperature=temperature,
                                   top_p=0.9,
                                   top_k=50)
  resulted_texts = tokenizer.batch_decode(resulted_tokens, skip_special_tokens=True)

  return resulted_texts

test_context = """Блок Generate предназначен для внесения в модель транзактов которые соответствует некоторым заявкам на обслуживание в моделируемой системе. Например запросы к серверу.
Имеются параметры 
A -  среднее значение интервала времени
B – разброс или модификатор среднего значения(по умолчанию ноль)
C – время появления первого транзакта (по умолчанию определяется законом распределения)
D – общее число генерируемых транзактов (для ограничения заявок, по умолчанию бесконечность)
E – уровень приоритета каждого транзакта( заявки на обслуживание могут иметь разный приоритет 0-127, значение по умолчанию 0)
F – Число параметров (по умолчанию 12 к каждому транзакту приписываются параметры)
G – тип параметра( F – полнослованый, H – полусловный по умолчанию)
Модель начинается с блока Generate
	Блок Terminate
Формат Termi[nate] A
A – величина, вычитаемая из содержимого счетчика завершений( поле А карты start)
Предназначен для удаления транзактов из модели. Когда счетчик старт окажется равен 0, то происходит завершение работы модели. 
Система массового обслуживания - некоторая система из которого вытекают требования и должны быть обслужены.
Блоки ограничивающие прибор. Как только транзакт движущийся по модели дойдет до блока seize он захватывает устройтсво
Seize A
A – имя устройства занимаемого транзактом
Release A
A – имя устройства освобождаемого транзактом
Если устройство быо захвачено транзактом, то все следующие транзакты подходящие к блоку seize задерживаются в очереди перед устройством, ожидая, когда оно освободится. Устройство освобождается когда транзакт проходит чере з release.
Advance – задержка перемещения транзакта. Предполагется что транзакт через любой блок за 0 время в gpss.
Advance A,[B]
B может быть опущено
A – среднее время задержки транзакта в блоке , значение – число, СЧА
B – модификатор задающий разброс времени задержки. Два типа модификаторов – модификатор интервал задающий закон распредения времени задержки. При вычисении разности значений, заданных в А и В получается нижняя граница, а при сложении верхняя. При использовании модификатор функции время задержки определяется как прозведение операнда занчения A и значения функции в парамтре B,
Составим модель
Имеется магазин куда приходят покупатели
1 Приход [2, 10](единицы времени)
2 Продавец [2, 8]
Generate 6,4
Seize
Advance 5,3
Release
Terminate
1 Приход [2, 10](единицы времени)
2 Продавец [2, 8]
3 Кассир [1,3]
4 Выдача товара [1, 3]
Generate 6,4
Seize pok \\ Покупатель идет к продавцу
Advance 5,3
Release pok
Seize kass \\Покупатель идет к кассиру
Advance 2 1
Release kass
Seize prod \\Покупатель на выдачу
Advance 2 1
Release prod
Terminate
Лекция 2
Queue – очередь, блок для сбора статистики, ограничивает участок модели, где собирается статистика,
Queue A,B
A – номер очереди (числовое или символьное имя очереди)
B – Число добавляемых в очередь элементов (по умолчанию 1)
Depart – блок для сбора статистики, ограничивает участок модели, где собирается статистика
A – номер очереди
B – Число удаляемых из очереди элементов
Использование различных 3РСВ
Стандартные функции 24шт
EXPONENTIAL(A,B,C),POISSON(A,B),…
GENERATE (EXPONENTIAL(1,10,0))
ADVANCE(POISSON(1,12))
A-датчик
С помощью B задаются параметры распределения
POISSON – закон распределения Пуассона
Создание пользовательских функций
Name FUNCTION A,B
Name – имя функции
A- аргумент функции RN(1-8)(какой датчик используется для генерации случайных величин)
B – состоит из данной буквы, определяющий тип функции0 и целого положительного числа, задающего количество пар возможных значений аргумента т функции
С- непрерывная числовая
D – дискретная величина
Создание пользовательских функций 
Rasp FUNCTIO RN6,5
.15,2/.35,5/.6,8/.82,9/1,12
Fun FUNCTION R1,C10
0,a/y1,x1/…/1,xn
Генерируется случайное значение от 0 1 ищется значение и определяется значение, которое выдается (происходит линейная интерполяции функции распределения)

"""

print(generate_text(QA_PROMPT.format(
  context=test_context,
  question='Какие параметры у блока Advance?'
),tokenizer=tokenizer,model=model, n=1))